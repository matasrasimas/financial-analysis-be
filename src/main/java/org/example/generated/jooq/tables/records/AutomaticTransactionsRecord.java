/*
 * This file is generated by jOOQ.
 */
package org.example.generated.jooq.tables.records;


import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.UUID;

import org.example.generated.jooq.enums.DurationEnum;
import org.example.generated.jooq.tables.AutomaticTransactions;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class AutomaticTransactionsRecord extends UpdatableRecordImpl<AutomaticTransactionsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>automatic_transactions.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>automatic_transactions.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>automatic_transactions.amount</code>.
     */
    public void setAmount(BigDecimal value) {
        set(1, value);
    }

    /**
     * Getter for <code>automatic_transactions.amount</code>.
     */
    public BigDecimal getAmount() {
        return (BigDecimal) get(1);
    }

    /**
     * Setter for <code>automatic_transactions.title</code>.
     */
    public void setTitle(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>automatic_transactions.title</code>.
     */
    public String getTitle() {
        return (String) get(2);
    }

    /**
     * Setter for <code>automatic_transactions.description</code>.
     */
    public void setDescription(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>automatic_transactions.description</code>.
     */
    public String getDescription() {
        return (String) get(3);
    }

    /**
     * Setter for <code>automatic_transactions.latest_transaction_date</code>.
     */
    public void setLatestTransactionDate(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>automatic_transactions.latest_transaction_date</code>.
     */
    public LocalDateTime getLatestTransactionDate() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>automatic_transactions.duration_minutes</code>.
     */
    public void setDurationMinutes(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>automatic_transactions.duration_minutes</code>.
     */
    public Integer getDurationMinutes() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>automatic_transactions.duration_unit</code>.
     */
    public void setDurationUnit(DurationEnum value) {
        set(6, value);
    }

    /**
     * Getter for <code>automatic_transactions.duration_unit</code>.
     */
    public DurationEnum getDurationUnit() {
        return (DurationEnum) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AutomaticTransactionsRecord
     */
    public AutomaticTransactionsRecord() {
        super(AutomaticTransactions.AUTOMATIC_TRANSACTIONS);
    }

    /**
     * Create a detached, initialised AutomaticTransactionsRecord
     */
    public AutomaticTransactionsRecord(UUID id, BigDecimal amount, String title, String description, LocalDateTime latestTransactionDate, Integer durationMinutes, DurationEnum durationUnit) {
        super(AutomaticTransactions.AUTOMATIC_TRANSACTIONS);

        setId(id);
        setAmount(amount);
        setTitle(title);
        setDescription(description);
        setLatestTransactionDate(latestTransactionDate);
        setDurationMinutes(durationMinutes);
        setDurationUnit(durationUnit);
        resetChangedOnNotNull();
    }
}
